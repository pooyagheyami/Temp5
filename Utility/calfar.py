# -*- coding: utf-8 -*-
#In the name of God
#!/usr/bin/env python
# -*- codnig: utf-8 -*-


import wx
import khayyam 
from datetime import timedelta
import  wx.lib.buttons  as  buttons

#----------------------------------------------------------------------
# This file was generated by C:\Portable Python 2.7.6.1\App\Lib\site-packages\wx-3.0-msw\wx\tools\img2py.py
#
from wx.lib.embeddedimage import PyEmbeddedImage

L = PyEmbeddedImage(
    "iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAIAAADZrBkAAAAAA3NCSVQICAjb4U/gAAAASUlE"
    "QVQokdXTyw0AMAgC0NL9d8YFED9JD/X+ghoFyTOvuzDPGIAxy4xjxqTMG81KI1jH6LQNax6N"
    "SOtI3WQp09m8dCsxEj88TgDTyhUg3Ky0GgAAAABJRU5ErkJggg==")


R = PyEmbeddedImage(
    "iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAIAAADZrBkAAAAAA3NCSVQICAjb4U/gAAAATElE"
    "QVQokdXTyREAIAgDQGP/PccCgEQZfeh/R44AkuP8zYa5zQA0f9NSFSmk6a2SfiSp3JpklC/3"
    "FpPkWZo+w6rEKiZSXjJ9GfjhcBZM5RUgzLJUOgAAAABJRU5ErkJggg==")




###########################################################################
## Python code generated with wxFormBuilder (version Jun 17 2015)
## http://www.wxformbuilder.org/
##
## PLEASE DO "NOT" EDIT THIS FILE!
###########################################################################
Y = int(khayyam.JalaliDate.today().strftime('%Y'))
M = int(khayyam.JalaliDate.today().strftime('%m'))

###########################################################################
## Class MyPanel31
###########################################################################

class MyPanel2 ( wx.Panel ):
    
    def __init__( self, parent , year=Y , month=M ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 300,200 ), style = wx.TAB_TRAVERSAL )

        self.SetLayoutDirection(2)
        bSizer13 = wx.BoxSizer( wx.VERTICAL )
        
        bSizer16 = wx.BoxSizer( wx.HORIZONTAL )

        
        self.year = year
        self.month = month
        

        

        if year==-1:
            sal=khayyam.JalaliDate.today().strftime('%N')
            self.sallat = int(khayyam.JalaliDate.today().strftime('%Y'))
        else:
            sal = khayyam.JalaliDate(year=year).strftime('%N')
            self.sallat = int(khayyam.JalaliDate(year=year).strftime('%Y'))
        if month==-1:
            mah=khayyam.JalaliDate.today().strftime('%B')
            self.mahlat = int(khayyam.JalaliDate.today().strftime('%m'))
        else:
            mah = khayyam.JalaliDate(month=month).strftime('%B')
            self.mahlat = int(khayyam.JalaliDate(month=month).strftime('%m'))

        '''
        sal = khayyam.JalaliDate(year=year).strftime('%N')
        self.sallat = int(khayyam.JalaliDate(year=year).strftime('%Y'))
        mah = khayyam.JalaliDate(month=month).strftime('%B')
        self.mahlat = int(khayyam.JalaliDate(month=month).strftime('%m'))
        print self.year,self.month,sal,self.sallat,mah,self.mahlat,'MyPanel2'
        '''

        self.w = self.firstweekofmonth(self.sallat,self.mahlat)
                
        self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY, R.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )
        
        self.m_button1 = buttons.GenButton( self, wx.ID_ANY, mah+' '+sal, wx.DefaultPosition, wx.Size( -1,20 ), style=wx.BORDER_NONE )
        self.m_button1.SetLayoutDirection(1)
        
        bSizer16.Add( self.m_button1, 1, wx.ALL, 5 )
        
        self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, L.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )
        
        
        bSizer13.Add( bSizer16, 0, wx.EXPAND, 0 )
        
        bSizer22 = wx.BoxSizer( wx.HORIZONTAL )

        haft = khayyam.jalali_date.PERSIAN_WEEKDAY_ABBRS

        for i in range(7):
            self.m_staticText23 = wx.StaticText( self, wx.ID_ANY, haft[i], wx.DefaultPosition, wx.Size( 9,-1 ), wx.ALIGN_CENTRE )
            self.m_staticText23.Wrap( -1 )
            bSizer22.Add( self.m_staticText23, 1, 0, 5 )
        
                
        
        bSizer13.Add( bSizer22, 0, wx.EXPAND, 0 )
        
        gSizer2 = wx.GridSizer( 6, 7, 1, 1 )

        labl=self.calntxt(self.sallat,self.mahlat)
        i = 0
        self.caltext=[]

        for row in range(6):
            for clm in range(7):
                self.caltext.append( buttons.GenButton( self, wx.ID_ANY, e2f(labl[i]), wx.DefaultPosition, wx.Size( -1,-1 ), style=wx.BORDER_NONE ))
                gSizer2.Add( self.caltext[i], 0, wx.EXPAND, 0 )
                self.caltext[i].SetLayoutDirection(1)
                #self.caltext[i].Bind(wx.EVT_BUTTON,self.Zdate)
                #print labl[i],type(labl[i])

                
                if clm == 6:
                    
                    self.caltext[i].SetBackgroundColour(wx.Colour( 0, 238, 0 ) )
                else:
                    self.caltext[i].SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_WINDOW  ) )
                    if row == 0  and int(labl[i]) > 7 or row >=  4 and int(labl[i]) < 13:
                        self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_ACTIVEBORDER ))
                        self.caltext[i].Bind(wx.EVT_BUTTON,self.Zdate)
                    else:
                        self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_BTNTEXT ))
                        
                i = i + 1
                
        self.rooz = int(khayyam.JalaliDate.today().strftime('%d'))
        self.irooz = self.rooz

        a = self.calnom(self.sallat,self.mahlat,self.rooz)

        if a > 0:
            self.caltext[a].SetBackgroundColour( wx.Colour( 70, 170, 240 ) )

        now =  khayyam.JalaliDate.today().strftime('%x')
        txt = u'امروز'
                                        
        bSizer13.Add( gSizer2, 1, wx.EXPAND, 5 )
        
        bSizer18 = wx.BoxSizer( wx.VERTICAL )
        
        self.m_staticText22 = wx.StaticText( self, wx.ID_ANY, txt+':'+now, wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText22.Wrap( -1 )
        self.m_staticText22.SetLayoutDirection(1)
        bSizer18.Add( self.m_staticText22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        bSizer13.Add( bSizer18, 0, wx.EXPAND, 0 )
        
        
        self.SetSizer( bSizer13 )
        self.Layout()
        self.Update()

        self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
        self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
        self.m_button1.Bind( wx.EVT_BUTTON, self.Onmonth )
    
    def __del__( self ):
        pass
    def firstweekofmonth(self,year,month):
        #print int(khayyam.JalaliDate(year,month,1).strftime('%w'))
        return int(khayyam.JalaliDate(year,month,1).strftime('%w'))
    
    def Onleft( self, event ):
        self.mahlat=self.mahlat+1
        if self.mahlat>12:
            self.sallat=self.sallat+1
            self.mahlat=1

        mah=khayyam.JalaliDate(self.sallat,self.mahlat).monthname()
        self.m_button1.SetLabel(mah+' '+str(self.sallat))

        self.calgrid()

        self.HideWithEffect(5,200)
        self.Show()
        self.Refresh()
        self.Layout()
            
    def Onright( self, event ):
        self.mahlat=self.mahlat-1
        if self.mahlat<=0:
            self.sallat=self.sallat-1
            self.mahlat=12

        mah=khayyam.JalaliDate(self.sallat,self.mahlat).monthname()
        self.m_button1.SetLabel(mah+' '+str(self.sallat))

        self.calgrid()
        self.HideWithEffect(6,200)
        self.Show()
        self.Refresh()
        self.Layout()

    def calgrid(self):
        labl=self.calntxt(self.sallat,self.mahlat)
        i=0
        #print self.m_textCtrl17.GetParent()
        for row in range(6):
            for clm in range(7):
                self.caltext[i].SetLabel(e2f(labl[i]))
                if row == 0  and int(labl[i]) > 7 or row >=  4 and int(labl[i]) < 13:
                    self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_ACTIVEBORDER ) )
                    self.caltext[i].Bind(wx.EVT_BUTTON,self.Zdate)
                else:
                    self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_BTNTEXT ) )
                    
                i = i+1

    def calntxt(self,sal,mah):
        label = []
        a=0
        c=1
        b=1
        for d in range(42):
            if d < self.firstweekofmonth(sal,mah):
                label.append((khayyam.JalaliDate(sal,mah,1)-
                              timedelta(days=
                                        (self.firstweekofmonth(sal,mah)-d))).strftime('%d'))
            if d >= self.firstweekofmonth(sal,mah):
                if c > khayyam.JalaliDate(sal,mah).daysinmonth:
                    a=a+1
                    label.append(str(a))
                else:
                    label.append(str(c))
                    c=c+1
        return label

    def calnom(self,sal,mah,rooz):
        #a=self.firstweekofmonth(sal,mah)
        i = -1
        if sal == int(khayyam.JalaliDate.today().strftime("%Y")) and mah == int(khayyam.JalaliDate.today().strftime("%m")) and rooz == int(khayyam.JalaliDate.today().strftime("%d")):
            #h = int(khayyam.JalaliDate.today().strftime("%w"))
            i = rooz + (self.w-1)
            #print self.w,i,h

        return i
        
    def Onmonth( self, event ):
        self.HideWithEffect(10,200)
        self.DestroyChildren()
        self.panel = MyPanel3(self,self.sallat)
        self.Show()
    
    def Zdate(self , event ):
        
        r = event.GetEventObject().GetLabel()
        print r,'Zdate'
        if r < 11 and r >= 1:
            
            self.Onleft(event)
        elif r > 24 and r <= 31:
            
            self.Onright(event)
        else:
            self.mahlat=self.mahlat
            
    def Rdate(self,irooz):
        #self.Destroy()
        self.irooz = irooz
        #self.mahlat  = self.month
        #self.sallat  = self.year
        print self.irooz,self.mahlat,self.sallat,'Rdate'
        print self.year,self.month,'Rdate'
        return khayyam.JalaliDatetime(year=self.sallat,month=self.mahlat,day=self.irooz).strftime('%N/%P/%K')

###########################################################################
## Class MyPanel3
###########################################################################

class MyPanel3 ( wx.Panel ):
	
	def __init__( self, parent , year):
		wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 300,200 ), style = wx.TAB_TRAVERSAL )

		self.SetLayoutDirection(2)
		bSizer13 = wx.BoxSizer( wx.VERTICAL )
		
		bSizer16 = wx.BoxSizer( wx.HORIZONTAL )

		self.sal=khayyam.JalaliDate(year=year).strftime('%N')
		self.sallat = int(khayyam.JalaliDate(year=year).strftime('%Y'))
		
		self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY, R.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
		bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )
		
		self.m_button1 = buttons.GenButton( self, wx.ID_ANY, self.sal, wx.DefaultPosition, wx.Size( -1,20 ), style=wx.BORDER_NONE )
                self.m_button1.SetLayoutDirection(1)
		bSizer16.Add( self.m_button1, 1, wx.ALL, 5 )
		
		self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, L.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
		bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )
		
		
		bSizer13.Add( bSizer16, 0, wx.EXPAND, 0 )
		
		gSizer2 = wx.GridSizer( 3, 4, 1, 1 )

		mont = khayyam.jalali_date.PERSIAN_MONTH_NAMES

		self.moncal = []
		i = 0
		MID = range(12)

		for mah in range(12):
                    self.moncal.append( wx.Button( self, MID[i], mont[mah+1], wx.DefaultPosition, wx.DefaultSize, 0 ))
                    gSizer2.Add( self.moncal[i], 0, wx.EXPAND, 5 )
                    self.moncal[i].Bind( wx.EVT_BUTTON, self.Onmonth )
                    i = i + 1
		
		now = khayyam.JalaliDate.today().strftime('%x')
		txt = u'امروز'
		
		
		bSizer13.Add( gSizer2, 1, wx.EXPAND, 5 )
		
		bSizer18 = wx.BoxSizer( wx.VERTICAL )
		
		self.m_staticText22 = wx.StaticText( self, wx.ID_ANY, txt+':'+now, wx.DefaultPosition, wx.DefaultSize, 0 )
		self.m_staticText22.Wrap( -1 )
		self.m_staticText22.SetLayoutDirection(1)
		bSizer18.Add( self.m_staticText22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
		
		
		bSizer13.Add( bSizer18, 0, wx.EXPAND, 0 )
		
		
		self.SetSizer( bSizer13 )
		self.Layout()

		self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
		self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
		self.m_button1.Bind( wx.EVT_BUTTON, self.Onsal )

	def Onleft( self, event ):
                
                self.sallat=self.sallat+1
                self.m_button1.SetLabel(e2f(unicode(int(self.sallat))))
                self.HideWithEffect(5,200)
                self.Show()
                self.Refresh()
                self.Layout()
                
		
	
	def Onright( self, event ):
                self.sallat=self.sallat-1
                self.m_button1.SetLabel(e2f(unicode(int(self.sallat))))
                self.HideWithEffect(6,200)
                self.Show()
		self.Refresh()
                self.Layout()


        def Onmonth( self, event ):
                n=event.GetId()
                m=self.moncal[n].GetLabel()
                
                #sal=khayyam.JalaliDate.today().strftime('%N')
		sal = int(khayyam.JalaliDate(year=self.sallat).strftime('%Y'))
		#mah=khayyam.JalaliDate.today().strftime('%B')
		mah = int(khayyam.JalaliDate(month=n+1).strftime('%m'))
		print sal,mah,'MyPanel3'
		
                self.HideWithEffect(10,200)
                self.DestroyChildren()
                self.panel = MyPanel2(self,sal,mah)
                self.Show()

        def Onsal( self, event ):
                self.HideWithEffect(10,200)
                self.DestroyChildren()
                self.panel = MyPanel4(self,self.sallat)
                self.Show()	
		
###########################################################################
## Class MyPanel4
###########################################################################

class MyPanel4 ( wx.Panel ):
	
	def __init__( self, parent , year):
		wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 300,200 ), style = wx.TAB_TRAVERSAL )

		self.SetLayoutDirection(2)
		bSizer13 = wx.BoxSizer( wx.VERTICAL )
		
		bSizer16 = wx.BoxSizer( wx.HORIZONTAL )
		y = int(year / 10)*10
		yers = [y+i for i in range(12)]

		self.sal=khayyam.JalaliDate(year=yers[0]).strftime('%N')
		self.salbd=khayyam.JalaliDate(year=yers[-1]).strftime('%N')
		self.sallat = int(khayyam.JalaliDate(year=yers[0]).strftime('%Y'))
		self.sallatbd = int(khayyam.JalaliDate(year=yers[-1]).strftime('%Y'))
		
		self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY, R.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
		bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )
		
		self.m_button1 = wx.StaticText( self, wx.ID_ANY, self.sal+u'-'+self.salbd, wx.DefaultPosition, wx.Size( -1,20 ), style=wx.BORDER_NONE )
                self.m_button1.SetLayoutDirection(1)
		bSizer16.Add( self.m_button1, 1, wx.ALL, 5 )
		
		self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, L.GetBitmap(), wx.DefaultPosition, wx.Size( 10,10 ), wx.BU_AUTODRAW )
		bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )
		
		
		bSizer13.Add( bSizer16, 0, wx.EXPAND, 0 )
		
		gSizer2 = wx.GridSizer( 3, 4, 1, 1 )

		mont = khayyam.jalali_date.PERSIAN_MONTH_NAMES

		self.yercal = []
		i = 0
		YID = range(12)

		for yer in yers:
                    self.yercal.append( wx.Button( self, YID[i], e2f(unicode(yer)), wx.DefaultPosition, wx.DefaultSize, 0 ))
                    gSizer2.Add( self.yercal[i], 0, wx.EXPAND, 5 )
                    self.yercal[i].Bind( wx.EVT_BUTTON, self.Onmonth )
                    i = i + 1
		
		now = khayyam.JalaliDate.today().strftime('%x')
		txt = u'امروز'
		
		
		bSizer13.Add( gSizer2, 1, wx.EXPAND, 5 )
		
		bSizer18 = wx.BoxSizer( wx.VERTICAL )
		
		self.m_staticText22 = wx.StaticText( self, wx.ID_ANY, txt+':'+now, wx.DefaultPosition, wx.DefaultSize, 0 )
		self.m_staticText22.Wrap( -1 )
		self.m_staticText22.SetLayoutDirection(1)
		bSizer18.Add( self.m_staticText22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
		
		
		bSizer13.Add( bSizer18, 0, wx.EXPAND, 0 )
		
		
		self.SetSizer( bSizer13 )
		self.Layout()

		self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
		self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
		#self.m_button1.Bind( wx.EVT_BUTTON, self.Onsal )

	def Onleft( self, event ):
                self.sallat=self.sallat+10
                                
                y = int(int(self.sallat)/ 10)*10
		yers = [y+i for i in range(12) ]
                for l in range(12):
                        self.yercal[l].SetLabel(e2f(unicode(yers[l])))
                #print type(yers[0])        
                self.m_button1.SetLabel(e2f(unicode(yers[0]))+u'-'+e2f(unicode(yers[-1])))
                self.HideWithEffect(5,200)
                self.Show()
                self.Refresh()
                self.Layout()
                
		
	
	def Onright( self, event ):
                self.sallat=self.sallat-10
                                
                y = int(int(self.sallat)/ 10)*10
		yers = [y+i for i in range(12) ]
                for l in range(12):
                        self.yercal[l].SetLabel(unicode(yers[l]))
                #print type(yers[0])        
                self.m_button1.SetLabel(e2f(unicode(yers[0]))+u'-'+e2f(unicode(yers[-1])))
                self.HideWithEffect(6,200)
                self.Show()
		self.Refresh()
                self.Layout()


        def Onmonth( self, event ):
                n=event.GetId()
                m=self.yercal[n].GetLabel()
                
                #sal=khayyam.JalaliDate.today().strftime('%N')
		sal = int(khayyam.JalaliDate(year=m).strftime('%Y'))
		#mah=khayyam.JalaliDate.today().strftime('%B')
		#mah = int(khayyam.JalaliDate(month=n+1).strftime('%m'))
		#print sal,mah
		
                self.HideWithEffect(10,200)
                self.DestroyChildren()
                self.panel = MyPanel3(self,sal)
                self.Show()

        
                

def e2f(number):
    s = ''  
    adadha = {u'0':1632 , u'1':1633 ,u'2':1634 , u'3':1635 , u'4':1636 ,u'5':1637 ,u'6':1638 ,u'7':1639 ,u'8':1640 ,u'9':1641 }
        
    for c in number:
        #print c
        s = s + unichr(adadha[c])
        #print s
    #print s
    return s

