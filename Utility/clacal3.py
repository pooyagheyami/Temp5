# -*- coding: cp1256 -*-
#In the name of God
#!/usr/bin/env python
# -*- codnig: utf-8 -*-


import wx
import wx.lib.analogclock as ac
#import calendar51
import khayyam 
from datetime import timedelta
import  wx.lib.buttons  as  buttons

#----------------------------------------------------------------------
# This file was generated by C:\Portable Python 2.7.6.1\App\Lib\site-packages\wx-3.0-msw\wx\tools\img2py.py
#
from wx.lib.embeddedimage import PyEmbeddedImage

L = PyEmbeddedImage(
    "iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAIAAADZrBkAAAAAA3NCSVQICAjb4U/gAAAASUlE"
    "QVQokdXTyw0AMAgC0NL9d8YFED9JD/X+ghoFyTOvuzDPGIAxy4xjxqTMG81KI1jH6LQNax6N"
    "SOtI3WQp09m8dCsxEj88TgDTyhUg3Ky0GgAAAABJRU5ErkJggg==")


R = PyEmbeddedImage(
    "iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAIAAADZrBkAAAAAA3NCSVQICAjb4U/gAAAATElE"
    "QVQokdXTyREAIAgDQGP/PccCgEQZfeh/R44AkuP8zYa5zQA0f9NSFSmk6a2SfiSp3JpklC/3"
    "FpPkWZo+w6rEKiZSXjJ9GfjhcBZM5RUgzLJUOgAAAABJRU5ErkJggg==")


###########################################################################
## Class MyPanel2
###########################################################################


class MyPanel2 ( wx.Panel ):
    
    def __init__( self, parent , year , month ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 400,200 ), style = wx.TAB_TRAVERSAL )

        self.SetLayoutDirection(2)
        bSizer13 = wx.BoxSizer( wx.VERTICAL )
        
        bSizer16 = wx.BoxSizer( wx.HORIZONTAL )

        if year==-1:
            sal=khayyam.JalaliDate.today().strftime('%N')
            self.sallat = int(khayyam.JalaliDate.today().strftime('%Y'))
        else:
            sal = khayyam.JalaliDate(year=year).strftime('%N')
            self.sallat = int(khayyam.JalaliDate(year=year).strftime('%Y'))
        if month==-1:
             mah=khayyam.JalaliDate.today().strftime('%B')
             self.mahlat = int(khayyam.JalaliDate.today().strftime('%m'))
        else:
             mah = khayyam.JalaliDate(month=month).strftime('%B')
             self.mahlat = int(khayyam.JalaliDate(month=month).strftime('%m'))
        
        
        self.w = self.firstweekofmonth(self.sallat,self.mahlat)

        
        self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY,  R.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )

        self.m_button1 = buttons.GenButton(self, wx.ID_ANY, mah+' '+sal,wx.DefaultPosition, wx.Size( -1,20 ) ,style=wx.BORDER_NONE)
        self.m_button1.SetLayoutDirection(1)
        #print self.m_button1.GetPosition()
                
        
        #self.m_button1 = wx.Button( self, wx.ID_ANY, mah+' '+sal, wx.DefaultPosition, wx.Size( -1,20 ), wx.BU_BOTTOM )
        bSizer16.Add( self.m_button1, 1, wx.ALL, 5 )
        
        self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY,  L.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )
        
        
        bSizer13.Add( bSizer16, 1, wx.EXPAND, 5 )
        
        bSizer22 = wx.BoxSizer( wx.HORIZONTAL )

        haft = khayyam.jalali_date.PERSIAN_WEEKDAY_NAMES

        for i in range(7):
            self.m_staticText23 = wx.StaticText( self, wx.ID_ANY, haft[i], wx.DefaultPosition, wx.Size( 35,-1 ), wx.ALIGN_CENTRE )
            self.m_staticText23.Wrap( -1 )
            bSizer22.Add( self.m_staticText23, 1, wx.ALL|wx.EXPAND, 5 )

                
        bSizer13.Add( bSizer22, 1, wx.EXPAND, 5 )
        
        self.gSizer2 = wx.GridSizer( 6, 7, 1, 1 )

        labl=self.calntxt(self.sallat,self.mahlat)
        #print labl
        i=0
        self.caltext=[]

        for row in range(6):
            for clm in range(7):

                self.caltext.append( wx.Button( self, wx.ID_ANY, labl[i], wx.DefaultPosition, wx.Size( 35,15 ),wx.NO_BORDER ))
                self.gSizer2.Add( self.caltext[i], 0, wx.EXPAND, 0 )
                                
                if clm == 6:
                    self.caltext[i].SetBackgroundColour( wx.Colour( 0, 238, 0 ) )
                else:
                    self.caltext[i].SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_WINDOW  ) )

                    if row == 0  and int(labl[i]) > 7 or row >=  4 and int(labl[i]) < 13:
                        self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_GRAYTEXT ) )
                    else:
                        self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_BTNTEXT ) )
                i= i+1

                
        rooz = int(khayyam.JalaliDate.today().strftime('%d'))
        
        a=self.calnom(self.sallat,self.mahlat,rooz)
        
        if a > 0:
            self.caltext[a].SetBackgroundColour( wx.Colour( 70, 170, 240 ) )

        
        now = khayyam.JalaliDate.today().strftime('%x')
        txt = u':ÇãÑæÒ'
        bSizer13.Add( self.gSizer2, 5, wx.EXPAND, 5 )
        
        bSizer18 = wx.BoxSizer( wx.VERTICAL )
        
        self.m_staticText22 = wx.StaticText( self, wx.ID_ANY, txt+now, wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText22.Wrap( -1 )
        bSizer18.Add( self.m_staticText22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        bSizer13.Add( bSizer18, 1, wx.EXPAND, 5 )
        
        
        self.SetSizer( bSizer13 )
        self.Layout()

        self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
        self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
        self.m_button1.Bind( wx.EVT_BUTTON, self.Onmonth )
        
    def firstweekofmonth(self,year,month):
        #print int(khayyam.JalaliDate(year,month,1).strftime('%w'))
        return int(khayyam.JalaliDate(year,month,1).strftime('%w'))

    def Onleft( self, event ):
        self.mahlat=self.mahlat+1
        if self.mahlat>12:
            self.sallat=self.sallat+1
            self.mahlat=1

        mah=khayyam.JalaliDate(self.sallat,self.mahlat).monthname()
        self.m_button1.SetLabel(mah+' '+str(self.sallat))
        
        self.calgrid()
        
        self.HideWithEffect(5,200)
        self.Show()
        self.Refresh()
        self.Layout()
        #event.Skip()
    
    def Onright( self, event ):
        self.mahlat=self.mahlat-1
        if self.mahlat<=0:
            self.sallat=self.sallat-1
            self.mahlat=12
                      
        mah=khayyam.JalaliDate(self.sallat,self.mahlat).monthname()         
        self.m_button1.SetLabel(mah+' '+str(self.sallat))
        
        self.calgrid()
        
        self.HideWithEffect(6,200)
        self.Show()
        self.Refresh()
        self.Layout()
        #event.Skip()
    def calgrid(self):
        labl=self.calntxt(self.sallat,self.mahlat)
        i=0
        #print self.m_textCtrl17.GetParent()
        for row in range(6):
            for clm in range(7):
                self.caltext[i].SetLabel(labl[i])
                if row == 0  and int(labl[i]) > 7 or row >=  4 and int(labl[i]) < 13:
                    self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_GRAYTEXT ) )
                else:
                    self.caltext[i].SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_BTNTEXT ) ) 

                i = i+1
        
    def calntxt(self,sal,mah):
        label = []
        a=0
        c=1
        b=1
        for d in range(42):
                                               
            if d < self.firstweekofmonth(sal,mah):
                
                                 
                label.append((khayyam.JalaliDate(sal,mah,1)-
                               timedelta(days=
                             (self.firstweekofmonth(sal,mah)-d))).strftime('%d'))
                                             
                                
                                
            if d >= self.firstweekofmonth(sal,mah):
                if c > khayyam.JalaliDate(sal,mah).daysinmonth:
                    a=a+1
                    label.append(str(a))
                else:
                    label.append(str(c))
                    c=c+1
                        
                                
        return label
    def calnom(self,sal,mah,rooz):
        #a=self.firstweekofmonth(sal,mah)
        i = -1
         
        if sal == int(khayyam.JalaliDate.today().strftime("%Y")) and mah == int(khayyam.JalaliDate.today().strftime("%m")) and rooz == int(khayyam.JalaliDate.today().strftime("%d")):
            #h = int(khayyam.JalaliDate.today().strftime("%w"))
            i = rooz + (self.w-1)
            #print self.w,i,h
            
        return i
        

    def Onmonth( self, event ):
        self.HideWithEffect(10,200)
        self.DestroyChildren()
        self.panel = MyPanel3(self,self.sallat)
        self.Show()


class MyPanel3 ( wx.Panel ):
    
    
    def __init__( self, parent , year  ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 400,200 ), style = wx.TAB_TRAVERSAL )

        self.SetLayoutDirection(2)
        bSizer15 = wx.BoxSizer( wx.VERTICAL )
        
        bSizer16 = wx.BoxSizer( wx.HORIZONTAL )

        self.sal=khayyam.JalaliDate(year=year).strftime('%N')
        self.sallat = int(khayyam.JalaliDate(year=year).strftime('%Y'))
        
        self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY,  R.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )
        
        self.m_staticText18 = buttons.GenButton( self, wx.ID_ANY, self.sal, wx.DefaultPosition, wx.DefaultSize, style=wx.BORDER_NONE )
        self.m_staticText18.SetLayoutDirection(1)
        #self.m_staticText18.Wrap( -1 )
        bSizer16.Add( self.m_staticText18, 1, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, L.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )

        #self.m_button2.SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )
        #self.m_button2.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        
        bSizer15.Add( bSizer16, 1, wx.EXPAND, 5 )
        
        gSizer1 = wx.GridSizer( 3, 4, 0, 0 )

        mont = khayyam.jalali_date.PERSIAN_MONTH_NAMES

        self.moncal = []
        i = 0
        MID = range(12)

        for mah in range(12):
            self.moncal.append( wx.Button( self, MID[i], mont[mah+1], wx.DefaultPosition, wx.DefaultSize, 0 ))
                        
            gSizer1.Add( self.moncal[i], 0, wx.EXPAND, 5 )
                
            self.moncal[i].Bind( wx.EVT_BUTTON, self.Onmonth )
            i = i + 1
                        
                        
        now = khayyam.JalaliDate.today().strftime('%x')
        txt = u'ÇãÑæÒ'
        
        bSizer15.Add( gSizer1, 5, wx.EXPAND, 1 )
        
        bSizer17 = wx.BoxSizer( wx.VERTICAL )
        
        self.m_staticText19 = wx.StaticText( self, wx.ID_ANY, txt+now, wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText19.Wrap( -1 )
        bSizer17.Add( self.m_staticText19, 0, wx.ALIGN_CENTER, 1 )
        
        
        bSizer15.Add( bSizer17, 1, wx.EXPAND, 5 )
        
        
        self.SetSizer( bSizer15 )
        self.Layout()

        self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
        self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
        self.m_staticText18.Bind( wx.EVT_BUTTON, self.Onsal )

    def Onleft( self, event ):
                        
        self.sallat=self.sallat+1
        self.m_staticText18.SetLabel(e2f(unicode(int(self.sallat))))
        self.HideWithEffect(5,200)
        self.Show()
        self.Refresh()
        self.Layout()
                
        
    
    def Onright( self, event ):
        self.sallat=self.sallat-1
        self.m_staticText18.SetLabel(e2f(unicode(int(self.sallat))))
        self.HideWithEffect(6,200)
        self.Show()
        self.Refresh()
        self.Layout()


    def Onmonth( self, event ):
        n=event.GetId()
        m=self.moncal[n].GetLabel()
                
        #sal=khayyam.JalaliDate.today().strftime('%N')
        sal = int(khayyam.JalaliDate(year=self.sallat).strftime('%Y'))
        #mah=khayyam.JalaliDate.today().strftime('%B')
        mah = int(khayyam.JalaliDate(month=n+1).strftime('%m'))
        #print sal,mah
        
        self.HideWithEffect(10,200)
        self.DestroyChildren()
        self.panel = MyPanel2(self,sal,mah)
        self.Show()

    def Onsal( self, event ):
        self.HideWithEffect(10,200)
        self.DestroyChildren()
        self.panel = MyPanel4(self,self.sallat)
        self.Show()
                
class MyPanel4 ( wx.Panel ):
    
    def __init__( self, parent , years  ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 400,200 ), style = wx.TAB_TRAVERSAL )

        self.SetLayoutDirection(2)
        bSizer15 = wx.BoxSizer( wx.VERTICAL )
        
        bSizer16 = wx.BoxSizer( wx.HORIZONTAL )
        y = int(years / 10)*10
        yers = [y+i for i in range(12) ]

        self.sal=khayyam.JalaliDate(year=yers[0]).strftime('%N')
        self.salbd=khayyam.JalaliDate(year=yers[-1]).strftime('%N')
        self.sallat = int(khayyam.JalaliDate(year=yers[0]).strftime('%Y'))
        self.sallatbd = int(khayyam.JalaliDate(year=yers[-1]).strftime('%Y'))
        
        self.m_bpButton1 = wx.BitmapButton( self, wx.ID_ANY,  R.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton1, 0, wx.ALIGN_CENTER, 5 )
        
        #self.m_staticText18 = buttons.GenButton( self, wx.ID_ANY, self.sal+u'-'+self.salbd, wx.DefaultPosition, wx.DefaultSize, style=wx.BORDER_NONE )
        self.m_staticText18 = wx.StaticText( self, wx.ID_ANY, self.sal+u'-'+self.salbd, wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_CENTRE )

        self.m_staticText18.SetLayoutDirection(1)
        self.m_staticText18.Wrap( -1 )
        bSizer16.Add( self.m_staticText18, 1, wx.ALIGN_CENTER|wx.ALL, 1 )
        
        self.m_bpButton2 = wx.BitmapButton( self, wx.ID_ANY, L.GetBitmap(), wx.DefaultPosition, wx.Size( 15,15 ), wx.BU_AUTODRAW )
        bSizer16.Add( self.m_bpButton2, 0, wx.ALIGN_CENTER, 5 )

        #self.m_button2.SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )
        #self.m_button2.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        
        bSizer15.Add( bSizer16, 1, wx.EXPAND, 5 )
        
        gSizer1 = wx.GridSizer( 3, 4, 0, 0 )

        
        
        self.yercal = []
        i = 0
        YID = range(12)

        for yer in yers:
            self.yercal.append( wx.Button( self, YID[i], e2f(unicode(yer)), wx.DefaultPosition, wx.DefaultSize, 0 ))
                       
            gSizer1.Add( self.yercal[i], 0, wx.EXPAND, 5 )
                
            self.yercal[i].Bind( wx.EVT_BUTTON, self.Onmonth )
            i = i + 1
                        
                        
        now = khayyam.JalaliDate.today().strftime('%x')
        txt = u'ÇãÑæÒ'
        
        bSizer15.Add( gSizer1, 5, wx.EXPAND, 1 )
        
        bSizer17 = wx.BoxSizer( wx.VERTICAL )
        
        self.m_staticText19 = wx.StaticText( self, wx.ID_ANY, txt+now, wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText19.Wrap( -1 )
        bSizer17.Add( self.m_staticText19, 0, wx.ALIGN_CENTER, 1 )
        
        
        bSizer15.Add( bSizer17, 1, wx.EXPAND, 5 )
        
        
        self.SetSizer( bSizer15 )
        self.Layout()

        self.m_bpButton1.Bind( wx.EVT_BUTTON, self.Onleft )
        self.m_bpButton2.Bind( wx.EVT_BUTTON, self.Onright )
        #self.moncal[i].Bind( wx.EVT_BUTTON, self.Onmonth )

    def Onleft( self, event ):
        self.sallat=self.sallat+10

        self.calreng()
       
        self.HideWithEffect(5,200)
        self.Show()
        self.Refresh()
        self.Layout()
                
        
    
    def Onright( self, event ):
        self.sallat=self.sallat-10

        self.calreng()
        
        self.HideWithEffect(6,200)
        self.Show()
        self.Refresh()
        self.Layout()

    def calreng( self ):
        y = int(int(self.sallat)/ 10)*10
        yers = [y+i for i in range(12) ]
        for l in range(12):
            self.yercal[l].SetLabel(unicode(yers[l]))
            #print type(yers[0])        
            self.m_staticText18.SetLabel(e2f(unicode(yers[0]))+u'-'+e2f(unicode(yers[-1])))
            

        


    def Onmonth( self, event ):
        n=event.GetId()
        m=self.yercal[n].GetLabel()
        #print m
        #sal=khayyam.JalaliDate.today().strftime('%N')
        sal = int(khayyam.JalaliDate(year=m).strftime('%Y'))
        #mah=khayyam.JalaliDate.today().strftime('%B')
        #mah = int(khayyam.JalaliDate(month=n+1).strftime('%m'))
        #print sal,mah
        #print unicode(sal)
        #print e2f(unicode(sal))
        self.HideWithEffect(10,200)
        self.DestroyChildren()
        self.panel = MyPanel3(self,sal)
        self.Show()
        
def e2f(number):
    s = ''  
    adadha = {u'0':1632 , u'1':1633 ,u'2':1634 , u'3':1635 , u'4':1636 ,u'5':1637 ,u'6':1638 ,u'7':1639 ,u'8':1640 ,u'9':1641 }
        
    for c in number:
        #print c
        s = s + unichr(adadha[c])
        #print s
    #print s
    return s

        

class ClockPanel(wx.Panel):
    def __init__(self, parent):
        
        wx.Panel.__init__(self, parent)

        

        self.parent = parent

        bSizer1 = wx.BoxSizer( wx.HORIZONTAL )

                
        c6 = ac.AnalogClock(self, size=(200,200),style = wx.RAISED_BORDER)

        colour = wx.Colour(255, 255, 40)
        c6.SetFaceFillColour(colour)
        colour = wx.Colour(220, 176, 3)
        c6.SetBackgroundColour(colour)

        bSizer1.Add(c6,0,wx.EXPAND|wx.ALL,5)

	#self.mbtn3 = wx.Button( self, wx.ID_ANY, u">", wx.DefaultPosition, wx.Size( 20,200 ), wx.BU_EXACTFIT )
	
	#bSizer1.Add( self.mbtn3, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 5 )


        #cal1 = MyPanel2(self,-1,-1)
        #bSizer1.Add(cal1,0,wx.EXPAND|wx.ALL,5)
        
        

        self.SetSizer(bSizer1)
        self.Layout()

        # Connect Events
	#self.mbtn3.Bind( wx.EVT_BUTTON, self.docal )

    def __del__( self ):
        pass
	
	
    # Virtual event handlers, overide them in your derived class
    #def docal( self, event ):
    #    event.Skip()
		

# -*- coding: utf-8 -*- 

###########################################################################
## Python code generated with wxFormBuilder (version Jun 17 2015)
## http://www.wxformbuilder.org/
##
## PLEASE DO "NOT" EDIT THIS FILE!
###########################################################################

import wx
import wx.xrc

###########################################################################
## Class MyFrame1
###########################################################################

class MyFrame1 ( wx.Frame ):
    def __init__( self, parent ):
        wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size( 200,200 ), style=wx.FRAME_FLOAT_ON_PARENT|wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )

        self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )

        self.bS1 = wx.BoxSizer( wx.HORIZONTAL )

        self.shohid = 0

        clock = ClockPanel(self)
        self.bS1.Add(clock,0,wx.EXPAND|wx.ALL,1)

        self.mbtn3 = wx.Button( self, wx.ID_ANY, u">", wx.DefaultPosition, wx.Size( 20,200 ), wx.BU_EXACTFIT )
        self.bS1.Add( self.mbtn3, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 1 )
        
        
        self.cal1 = MyPanel2(self,-1,-1)
        self.bS1.Add(self.cal1,0,wx.EXPAND|wx.ALL,5)

        self.cal1.Hide()
        #self.Centre( wx.BOTH )

        self.SetSizer(self.bS1)
        self.Layout()

        # Connect Events
        self.mbtn3.Bind( wx.EVT_BUTTON, self.docal )
        

    def __del__( self ):
        pass
	
	
    # Virtual event handlers, overide them in your derived class
    def docal( self, event ):
        if self.shohid == 0:
            self.SetSize((660,250))
            self.cal1.ShowWithEffect(2,200)
            self.mbtn3.SetLabel(u"<")
            
            self.Layout()
            self.shohid = 1
        else:
            self.SetSize((250,250))
            self.cal1.HideWithEffect(3,200)
            self.mbtn3.SetLabel(u">")
            
            self.Layout()
            self.shohid = 0
            
            

'''
        
        
if __name__ == '__main__':
    
    app = wx.App()

    frame = MyFrame1(None)
    frame.SetSize((250,250))
    frame.Show()
    app.MainLoop()

'''
